<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration SYSTEM "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<!-- Root tag of configuration -->
<hibernate-configuration>
	<!-- this tag begins configuration to a database -->
	<session-factory>
		<property name="hibernate.connection.driver_class">
			oracle.jdbc.OracleDriver
		</property>
		
		<property name="hibernate.dialect">
			org.hibernate.dialect.Oracle10gDialect
		</property>
		
		<property name="hibernate.connection.url">
			jdbc:oracle:thin:@localhost:1521:admin
		</property>
		
		<property name="hibernate.connection.username">
			william
		</property>
		
		<property name="hibernate.connection.password">
			admin
		</property>
		
		<!-- This property determines how many connections
		a single user is allowed to a database. a higher
		number will speed up the process for a user. but
		a lot will also eat up all the available
		connections -->
		<property name="hibernate.connection.pool_size">
			2
		</property>
		
		<property name="show_sql">
			true
		</property>
		
		<!-- the below property is what tells hibernate
		how to deal with a database. It can be one of 
		four states:
			Create: hibernate will purge existing database, and
			create it from scratch
			UPDATE: Hibernate connects to the existing database
			and interacts with it without removing current data
			VALIDATE: creates the schema, destroying old data
			CREATE-DROP: purges existing tables, and creates them
			from scratch... then when the server is shut down, it
			will purge the data again -->
		<property name="hibernate.hbm2ddl.auto">
			update
		</property>
		<mapping resource="cat.hbm.xml"/>
		<mapping class="com.revature.beans.Bee"/>
		<mapping class="com.revature.beans.Beehive"/>
		<mapping class="com.revature.beans.Flower"/>
	</session-factory>
</hibernate-configuration>